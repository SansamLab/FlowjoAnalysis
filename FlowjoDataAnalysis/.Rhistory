library(devtools)
document()
document()
document()
build()
install.packages("~/Dropbox (OMRF)/FlowjoAnalysis/FlowjoDataAnalysis_0.1.0.tar.gz", repos = NULL, type = "source")
remove.packages("CytoML", lib="~/Library/R/x86_64/4.1/library")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("CytoML")
install.packages("~/Dropbox (OMRF)/FlowjoAnalysis/FlowjoDataAnalysis_0.1.0.tar.gz", repos = NULL, type = "source")
library(cytolib)
document()
build()
install.packages("~/Dropbox (OMRF)/FlowjoAnalysis/FlowjoDataAnalysis_0.1.0.tar.gz", repos = NULL, type = "source")
remotes::install_github("RGLab/cytolib", force = TRUE)
remotes::install_github("RGLab/flowCore", force = TRUE)
remotes::install_github("RGLab/flowWorkspace", force = TRUE)
remotes::install_github("RGLab/CytoML", force = TRUE)
CytoML::open_flowjo_xml
CytoML::flowjo_to_gatingset
library(devtools)
document()
build()
wspFilename="04-Oct-2021.wsp"
fcsPath="."
fcsPattern=".fcs"
nodes="Cells"
markers=c("FSC-A","SSC-A","FL1-A")
# load workspace
data <- CytoML::open_flowjo_xml(wspFilename)
setwd("~/Dropbox (OMRF)/Kevin + Courtney Cell Line Exps/FACS data for screens/2021_VP64-dcas Clones/2021_CDC45-VP64 dCas clones")
# load workspace
data <- CytoML::open_flowjo_xml(wspFilename)
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes=nodes, other.markers=markers, threshold = FALSE)
names(df3) <- gsub("\\..*","",names(df3))
# add names to last column and remove excess columns
df3 <- lapply(df3, as.data.frame)
# return list of dataframes
return(df3)
df3
lapply(df3, head)
install.packages("~/Dropbox (OMRF)/Github/FlowjoAnalysis/FlowjoDataAnalysis_0.1.1.tar.gz", repos = NULL, type = "source")
library(FlowjoDataAnalysis)
setwd("~/Dropbox (OMRF)/Kevin + Courtney Cell Line Exps/FACS data for screens/2021_VP64-dcas Clones/2021_CDC45-VP64 dCas clones")
test <- getFlowjoWspData()
lapply(test, head)
setwd("~/Dropbox (OMRF)/Kevin + Courtney Cell Line Exps/FACS data for screens/Kevin test EDU samples")
test2 <- getFlowjoWspData("10-Jan-2022")
setwd("~/Dropbox (OMRF)/Kevin + Courtney Cell Line Exps/FACS data for screens/Kevin test EDU samples")
test2 <- getFlowjoWspData("10-Jan-2022")
test2 <- getFlowjoWspData("10-Jan-2022.wsp")
test2 <- getFlowjoWspData("10-Jan-2022 Kevin test.wsp")
test2 <- getFlowjoWspData("10-Jan-2022 Kevin test.wsp", ".", ".fcs","Cells","FSC-A")
lapply(test2, head)
setwd("~/Desktop/Shahadat/Hela TICRR G1_S destruction experiment/Insoluble FACS hela TICRR")
test3 <- getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "Cells", "FSC-A")
lapply(test3, head)
test4 <- getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "Singlets", "FSC-A")
test4 <- getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "SInglets", "FSC-A")
lapply(test4, head)
library(FlowjoDataAnalysis)
setwd("~/Desktop/Shahadat/Hela TICRR G1_S destruction experiment/Insoluble FACS hela TICRR")
getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "Cells", "FSC-A")
test3 <- getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "Cells", "FSC-A")
lapply(test3, head)
head(test3[[1]])
median((test3[[1]]$`FSC-A`)
median((test3[[1]]$`FSC-A`))
test3[[1]]
max((test3[[1]]$`FSC-A`))
min((test3[[1]]$`FSC-A`))
mean((test3[[1]]$`FSC-A`))
test3 <- getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "SInglets", "FSC-A")
lapply(test3, head)
head(test3[[1]])
NROW((test3[[1]]$`FSC-A`))
test3 <- getFlowjoWspData("14-Jan-2022.wsp", ".", ".fcs", "S", "FSC-A")
lapply(test3, head)
NROW((test3[[1]]$`FSC-A`))
library(devtools)
document()
build()
remove.packages("FlowjoDataAnalysis", lib="~/Library/R/x86_64/4.1/library")
install.packages("~/Dropbox (OMRF)/Github/FlowjoAnalysis/FlowjoDataAnalysis_0.1.2.tar.gz", repos = NULL, type = "source")
library(FlowjoDataAnalysis)
setwd("~/Desktop/Shahadat/Hela TICRR G1_S destruction experiment/Insoluble FACS hela TICRR")
library(FlowjoDataAnalysis)
test3 <- getFlowjoWspData("14-Jan-2022.wsp","Cells", "FSC-A")
lapply(test3, head)
library(FlowjoDataAnalysis)
setwd("~/Desktop/Shahadat/Hela TICRR G1_S destruction experiment/Insoluble FACS hela TICRR")
setwd("~/Desktop/Shahadat/Hela TICRR G1_S destruction experiment/Insoluble FACS hela TICRR")
library(FlowjoDataAnalysis)
test <- getFlowjoWspData("14-Jan-2022.wsp", "Cells", "FSC-A")
lapply(test, head)
sessionInfo()
install.packages("renv")
library(renv)
init()
snapshot()
library(devtools)
document()
build()
document()
build()
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 Insoluble TICRR Auxin")
library(FlowjoDataAnalysis)
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="G1", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
names(df3) <- gsub("\\_.*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
df <- as.data.frame(df3[[x]])
df$Sample <- x
return(df)
})
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="G1", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
names(df3) <- gsub("\\_.*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
df <- as.data.frame(df3[[x]])
df$Sample <- x
return(df)
})
names(df3names) <- gsub("\\_.*","",names(df3))
lapply(df3names, head)
insolubleS <- df3names
lapply(insolubleS, head)
# change gate and run again
insolubleG1 <- df3names
lapply(insolubleG1, head)
# make coldata
coldata <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(insolubleG1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
write.table(colData, file = "2022Jan27_colData", quote=F,row.names = F,sep="\t")
write.table(coldata, file = "2022Jan27_colData", quote=F,row.names = F,sep="\t")
write.table(coldata, file = "2022Jan27_colData.txt", quote=F,row.names = F,sep="\t")
install.packages("~/Dropbox (OMRF)/Github/FlowjoAnalysis/FlowjoDataAnalysis_0.1.4.tar.gz", repos = NULL, type = "source")
library(FlowjoDataAnalysis)
test <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(test, head)
G1 <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(G1, head)
S <- getFlowjoWspData("25-Jan-2022.wsp" , "S", c("FL1-A", "FL2-A"))
lapply(S, head)
coldata <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
head(coldata)
colData
coldata
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
S.new <- BackgroundSubtract(colData, S)
# make new df with all data background subtracted
G1.new <- do.call("rbind",G1)
G1.new$stage <- "G1"
S.new <- do.call("rbind",S)
S.new$stage <- "S"
All <- rbind(G1,S)
ggplot2::ggplot(All,ggplot2::aes(x=stage,color=Sample,y=bcgrndSub)) +
ggplot2::geom_boxplot() +
ggtitle("Insoluble Ticrr FACS Assay") +
xlab("Stage") +
ylab("FITC-A (Background Subtracted HCT Control)")
All <- rbind(G1,S)
head(All[[1]])
library(FlowjoDataAnalysis)
G1 <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(G1, head)
S <- getFlowjoWspData("25-Jan-2022.wsp" , "S", c("FL1-A", "FL2-A"))
lapply(S, head)
colData <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
colData
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
colData <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
colData
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
library(FlowjoDataAnalysis)
G1 <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(G1, head)
S <- getFlowjoWspData("25-Jan-2022.wsp" , "S", c("FL1-A", "FL2-A"))
lapply(S, head)
colData <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
colData
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
colData
# background subtract the y-axis column
G1.new <- BackgroundSubtract(coldata = colData, G1 = G1)
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="G1", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
names(df3) <- gsub("\\_.*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
df <- as.data.frame(df3[[x]])
df$Sample <- x
return(df)
})
names(df3names) <- gsub("\\_.*","",names(df3))
lapply(df3names, head)
insolubleS <- df3names
lapply(insolubleS, head)
# change gate and run again
insolubleG1 <- df3names
lapply(insolubleG1, head)
# make coldata
coldata <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(insolubleG1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
write.table(coldata, file = "2022Jan27_colData.txt", quote=F,row.names = F,sep="\t")
# background subtract function
BackgroundSubtract <- function(colData,ChannelValueList){
colDataList <- split(coldata,f=coldata$Treated)
tst <- lapply(colDataList,function(colDataSubset){
# subset channel value list to get the control numbers
controlNumbers <- ChannelValueList[[colDataSubset$Control]]
# subset y axis values
controlNumbers <- controlNumbers[,colDataSubset$yaxischannel]
# calculate median
controlMedian <- median(controlNumbers)
# subset channel value list to get the treated numbers
treatedNumbers <- ChannelValueList[[colDataSubset$Treated]]
# add backgroundsubtracted y axis values
treatedNumbers$bcgrndSub <- treatedNumbers[,colDataSubset$yaxischannel] - controlMedian
return(treatedNumbers)
})
return(tst)
}
G1 <- BackgroundSubtract(coldata,insolubleG1)
G1 <- do.call("rbind",G1)
G1$stage <- "G1"
S <- BackgroundSubtract(coldata,insolubleS)
S <- do.call("rbind",S)
S$stage <- "S"
All <- rbind(G1,S)
ggplot2::ggplot(All,ggplot2::aes(x=stage,color=Sample,y=bcgrndSub)) +
ggplot2::geom_boxplot() +
ggtitle("Insoluble Ticrr FACS Assay") +
xlab("Stage") +
ylab("FITC-A (Background Subtracted HCT Control)")
library(FlowjoDataAnalysis)
G1 <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(G1, head)
S <- getFlowjoWspData("25-Jan-2022.wsp" , "S", c("FL1-A", "FL2-A"))
lapply(S, head)
colData <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
colData
# background subtract function
BackgroundSubtract <- function(colData,ChannelValueList){
colDataList <- split(coldata,f=coldata$Treated)
tst <- lapply(colDataList,function(colDataSubset){
# subset channel value list to get the control numbers
controlNumbers <- ChannelValueList[[colDataSubset$Control]]
# subset y axis values
controlNumbers <- controlNumbers[,colDataSubset$yaxischannel]
# calculate median
controlMedian <- median(controlNumbers)
# subset channel value list to get the treated numbers
treatedNumbers <- ChannelValueList[[colDataSubset$Treated]]
# add backgroundsubtracted y axis values
treatedNumbers$bcgrndSub <- treatedNumbers[,colDataSubset$yaxischannel] - controlMedian
return(treatedNumbers)
})
return(tst)
}
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
# background subtract function
BackgroundSubtract1 <- function(colData,ChannelValueList){
colDataList <- split(coldata,f=coldata$Treated)
tst <- lapply(colDataList,function(colDataSubset){
# subset channel value list to get the control numbers
controlNumbers <- ChannelValueList[[colDataSubset$Control]]
# subset y axis values
controlNumbers <- controlNumbers[,colDataSubset$yaxischannel]
# calculate median
controlMedian <- median(controlNumbers)
# subset channel value list to get the treated numbers
treatedNumbers <- ChannelValueList[[colDataSubset$Treated]]
# add backgroundsubtracted y axis values
treatedNumbers$bcgrndSub <- treatedNumbers[,colDataSubset$yaxischannel] - controlMedian
return(treatedNumbers)
})
return(tst)
}
# background subtract the y-axis column
G1.new <- BackgroundSubtract1(colData, G1)
library(FlowjoDataAnalysis)
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="G1", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
names(df3) <- gsub("\\_.*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
df <- as.data.frame(df3[[x]])
df$Sample <- x
return(df)
})
names(df3names) <- gsub("\\_.*","",names(df3))
lapply(df3names, head)
# change gate and run again
insolubleG1 <- df3names
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="S", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
names(df3) <- gsub("\\_.*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
df <- as.data.frame(df3[[x]])
df$Sample <- x
return(df)
})
names(df3names) <- gsub("\\_.*","",names(df3))
lapply(df3names, head)
insolubleS <- df3names
lapply(insolubleS, head)
# make coldata
coldata <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(insolubleG1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
# background subtract function
BackgroundSubtract <- function(colData,ChannelValueList){
colDataList <- split(coldata,f=coldata$Treated)
tst <- lapply(colDataList,function(colDataSubset){
# subset channel value list to get the control numbers
controlNumbers <- ChannelValueList[[colDataSubset$Control]]
# subset y axis values
controlNumbers <- controlNumbers[,colDataSubset$yaxischannel]
# calculate median
controlMedian <- median(controlNumbers)
# subset channel value list to get the treated numbers
treatedNumbers <- ChannelValueList[[colDataSubset$Treated]]
# add backgroundsubtracted y axis values
treatedNumbers$bcgrndSub <- treatedNumbers[,colDataSubset$yaxischannel] - controlMedian
return(treatedNumbers)
})
return(tst)
}
G1 <- BackgroundSubtract(coldata,insolubleG1)
G1 <- do.call("rbind",G1)
G1$stage <- "G1"
S <- BackgroundSubtract(coldata,insolubleS)
S <- do.call("rbind",S)
S$stage <- "S"
All <- rbind(G1,S)
ggplot2::ggplot(All,ggplot2::aes(x=stage,color=Sample,y=bcgrndSub)) +
ggplot2::geom_boxplot() +
ggtitle("Insoluble Ticrr FACS Assay") +
xlab("Stage") +
ylab("FITC-A (Background Subtracted HCT Control)")
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 total TICRR Auxin")
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 total TICRR Auxin")
library(FlowjoDataAnalysis)
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="S", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
names(df3) <- gsub("\\_.*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
df <- as.data.frame(df3[[x]])
df$Sample <- x
return(df)
})
names(df3names) <- gsub("\\_.*","",names(df3))
library(FlowjoDataAnalysis)
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="S", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="G1", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 total TICRR Auxin")
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 total TICRR Auxin")
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 total TICRR Auxin")
library(FlowjoDataAnalysis)
data <- CytoML::open_flowjo_xml("25-Jan-2022.wsp")
# parse workspace and fcs files
gs <- CytoML::flowjo_to_gatingset(data, name = 1)
# put data
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="G1", other.markers=c("FL1-A","FL2-A"), threshold = FALSE)
G1 <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(All, head)
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 Insoluble TICRR Auxin")
library(devtools)
document()
build()
remove.packages("FlowjoDataAnalysis", lib="~/Library/Caches/org.R-project.R/R/renv/library/FlowjoDataAnalysis-6ed09c63/R-4.1/x86_64-apple-darwin17.0")
install.packages("~/Dropbox (OMRF)/Github/FlowjoAnalysis/FlowjoDataAnalysis_0.1.5.tar.gz", repos = NULL, type = "source")
setwd("~/Dropbox (OMRF)/Kevin & Shahadat/2022-01-24 HCT Tir1 Insoluble TICRR Auxin")
library(FlowjoDataAnalysis)
G1 <- getFlowjoWspData("25-Jan-2022.wsp" , "G1", c("FL1-A", "FL2-A"))
lapply(G1, head)
S <- getFlowjoWspData("25-Jan-2022.wsp" , "S", c("FL1-A", "FL2-A"))
lapply(S, head)
colData <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
colData
# background subtract the y-axis column
G1.new <- BackgroundSubtract1(colData, G1)
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
colData <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
colData
# background subtract the y-axis column
G1.new <- BackgroundSubtract(colData, G1)
coldata <- data.frame(Control = c("HCT ATCC  Insol. Auxin 0.fcs"),
Treated = names(G1[-c(1,2)]),
yaxischannel = "FITC-A",
DNAchanel = "PE-A",
G1gate = "G1",
Sgate = "S")
coldata
# background subtract the y-axis column
G1.new <- BackgroundSubtract(coldata, G1)
S.new <- BackgroundSubtract(coldata, S)
# make new df with all data background subtracted
G1.new <- do.call("rbind",G1)
G1.new$stage <- "G1"
S.new <- do.call("rbind",S)
S.new$stage <- "S"
All <- rbind(G1.new,S.new)
ggplot2::ggplot(All,ggplot2::aes(x=stage,color=Sample,y=bcgrndSub)) +
ggplot2::geom_boxplot() +
ggtitle("Insoluble Ticrr FACS Assay") +
xlab("Stage") +
ylab("FITC-A (Background Subtracted HCT Control)")
head(All[[1]])
head(All)
tail(All)
head(G1.new)
document()
library(devtools)
document()
build()
