---
title: "FlowjoDatatoR"
author: "Kevin Boyd"
date: "1/10/2022"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Load Libraries
```{r}
library(CytoML)
library(ggcyto)
library(flowWorkspace)
```

# Load in Worspace data
```{r}
# load in workspace
data <- CytoML::open_flowjo_xml("04-Oct-2021.wsp")
data
```

# load in .fcs files into workspace
```{r}
# load fcs files
myfiles <- list.files(path=".", pattern=".fcs")
fs <- flowCore::read.flowSet(myfiles, path=".")
fs
```

# Load in gate settings
```{r}
# load in gate settings
gs <- CytoML::flowjo_to_gatingset(data, name = 2)
plot(gs)
```

# Auto plot different gates
```{r}
# plot each gate specifically
ggcyto::autoplot(gs[2], c("APC+"), bins = 200) + ggcyto_par_set(limits = "data")
ggcyto::autoplot(gs[2], c("Cells"), bins = 200) + ggcyto_par_set(limits = "data")

# plot multiple together
ggcyto::autoplot(gs[c(1,2,3,4)], "APC+", bins = 200) + ggcyto_par_set(limits = "data")
```

# Pull out specific data from each gate
```{r}
# pull out specific cell information based on gate
flowWorkspace::gs_pop_get_count_fast(gs)

# Cells gate
df3 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="Cells", other.markers=c("FSC-A","SSC-A","FL1-A"), threshold = FALSE)
names(df3) <- gsub("\\..*","",names(df3))
# add names to last column and remove excess columns
df3names <- lapply(names(df3), function(x) {
  df <- as.data.frame(df3[[x]])
  df$Sample <- x
  df <- df[,-c(1,2)]
  return(df)
})
# check what list of dataframes looks like
lapply(df3names, head)



# APC+ gate
df4 <- flowWorkspace::gs_get_singlecell_expression_by_gate(x=gs, nodes="APC+", other.markers=c("FSC-A","SSC-A", "FL1-A"), threshold = FALSE)
names(df4) <- gsub("\\..*","",names(df4))
# add names to last column and remove excess columns
df4names <- lapply(names(df4), function(x) {
  df <- as.data.frame(df4[[x]])
  df$Sample <- x
  df <- df[,-c(1,2)]
  return(df)
})
# check what list of dataframes looks like
lapply(df4names, head)
```


